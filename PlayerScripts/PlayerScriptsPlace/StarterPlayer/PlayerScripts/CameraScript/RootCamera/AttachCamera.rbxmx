<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<External>null</External>
	<External>nil</External>
	<Item class="ModuleScript" referent="RBXd1e245b180ea4a91a169f7da243e1a29">
		<Properties>
			<string name="Name">AttachCamera</string>
			<ProtectedString name="Source">local PlayersService = game:GetService(&apos;Players&apos;)
local RootCameraCreator = require(script.Parent)

local XZ_VECTOR = Vector3.new(1,0,1)


local function IsFinite(num)
&#9;return num == num and num ~= 1/0 and num ~= -1/0
end

-- May return NaN or inf or -inf
-- This is a way of finding the angle between the two vectors:
local function findAngleBetweenXZVectors(vec2, vec1)
&#9;return math.atan2(vec1.X*vec2.Z-vec1.Z*vec2.X, vec1.X*vec2.X + vec1.Z*vec2.Z)
end

local function CreateAttachCamera()
&#9;local module = RootCameraCreator()
&#9;module:ConnectInputEvents()
&#9;module.PanEnabled = false
&#9;module.KeyPanEnabled = false
&#9;
&#9;local lastUpdate = tick()
&#9;function module:Update()
&#9;&#9;local now = tick()
&#9;&#9;
&#9;&#9;local camera = &#9;workspace.CurrentCamera
&#9;&#9;local player = PlayersService.LocalPlayer
&#9;&#9;
&#9;&#9;if lastUpdate == nil or now - lastUpdate &gt; 1 then
&#9;&#9;&#9;module:ResetCameraLook()
&#9;&#9;&#9;self.LastCameraTransform = nil
&#9;&#9;end&#9;
&#9;&#9;
&#9;&#9;local subjectPosition = self:GetSubjectPosition()&#9;&#9;
&#9;&#9;if subjectPosition and player and camera then
&#9;&#9;&#9;local zoom = self:GetCameraZoom()
&#9;&#9;&#9;if zoom &lt;= 0 then
&#9;&#9;&#9;&#9;zoom = 0.1
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;if self.LastCameraTransform then
&#9;&#9;&#9;&#9;local humanoid = self:GetHumanoid()
&#9;&#9;&#9;&#9;if lastUpdate and humanoid and humanoid.Torso then
&#9;&#9;&#9;&#9;&#9;local forwardVector = humanoid.Torso.CFrame.lookVector

&#9;&#9;&#9;&#9;&#9;local y = findAngleBetweenXZVectors(forwardVector, self:GetCameraLook())
&#9;&#9;&#9;&#9;&#9;if IsFinite(y) and math.abs(y) &gt; 0.0001 then
&#9;&#9;&#9;&#9;&#9;&#9;self:RotateCamera(self:GetCameraLook(), Vector3.new(y, 0, 0))
&#9;&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;&#9;end
&#9;&#9;&#9;end
&#9;&#9;&#9;
&#9;&#9;&#9;camera.Focus = CFrame.new(subjectPosition)
&#9;&#9;&#9;camera.CoordinateFrame = CFrame.new(camera.Focus.p - (zoom * self:GetCameraLook()), camera.Focus.p)
&#9;&#9;&#9;self.LastCameraTransform = camera.CoordinateFrame
&#9;&#9;end
&#9;&#9;lastUpdate = now
&#9;end
&#9;
&#9;return module
end

return CreateAttachCamera
</ProtectedString>
		</Properties>
	</Item>
</roblox>